name: Merge Dependency PRs

# This workflow can only be triggered manually
on:
  workflow_dispatch:
    inputs:
      merge_method:
        description: 'Merge method to use'
        required: true
        default: 'merge'
        type: choice
        options:
          - merge
          - squash
          - rebase
      close_unmergeable:
        description: 'Close PRs that cannot be merged'
        required: true
        default: true
        type: boolean
      dry_run:
        description: 'Dry run mode (show what would happen without making changes)'
        required: true
        default: false
        type: boolean

jobs:
  merge-dependency-prs:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      pull-requests: write
      issues: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Install PowerShell
        shell: bash
        run: |
          # Update package list
          sudo apt-get update
          
          # Install PowerShell
          wget -q https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb
          sudo dpkg -i packages-microsoft-prod.deb
          sudo apt-get update
          sudo apt-get install -y powershell
          
      - name: Verify installations
        shell: bash
        run: |
          echo "PowerShell version:"
          pwsh --version
          echo "GitHub CLI version:"
          gh --version
          echo "GitHub CLI is pre-installed on GitHub runners"
          
      - name: Authenticate GitHub CLI
        shell: bash
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
          gh auth status
          
      - name: Run merge dependency PRs script
        shell: pwsh
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Set parameters based on workflow inputs
          $MergeMethod = "${{ github.event.inputs.merge_method }}"
          $CloseUnmergeable = [System.Convert]::ToBoolean("${{ github.event.inputs.close_unmergeable }}")
          $DryRun = [System.Convert]::ToBoolean("${{ github.event.inputs.dry_run }}")
          
          Write-Host "=== GitHub Action: Merge Dependency PRs ===" -ForegroundColor Magenta
          Write-Host "Triggered by: ${{ github.actor }}" -ForegroundColor Yellow
          Write-Host "Merge method: $MergeMethod" -ForegroundColor Yellow
          Write-Host "Close unmergeable: $CloseUnmergeable" -ForegroundColor Yellow
          Write-Host "Dry run mode: $DryRun" -ForegroundColor Yellow
          Write-Host "=" * 60
          
          if ($DryRun) {
            Write-Host "üîç DRY RUN MODE - No actual changes will be made" -ForegroundColor Cyan
            Write-Host "=" * 60
          }
          
          # Navigate to scripts directory and run the script
          Set-Location "scripts"
          
          if ($DryRun) {
            # In dry run mode, we'll modify the script behavior
            Write-Host "Dry run mode: Analyzing repositories and PRs without making changes..." -ForegroundColor Cyan
            
            # Create a modified version for dry run
            $scriptContent = Get-Content "merge-dependency-prs.ps1" -Raw
            
            # Replace merge and close operations with dry run logging
            $dryRunScript = $scriptContent -replace 'gh pr merge.*--delete-branch', 'Write-Host "DRY RUN: Would merge PR #$PRNumber" -ForegroundColor Green'
            $dryRunScript = $dryRunScript -replace 'gh pr close.*--comment.*', 'Write-Host "DRY RUN: Would close PR #$PRNumber" -ForegroundColor Yellow'
            $dryRunScript = $dryRunScript -replace 'gh api --method DELETE.*', 'Write-Host "DRY RUN: Would delete branch $branchName" -ForegroundColor Yellow'
            
            # Write dry run script
            $dryRunScript | Out-File "merge-dependency-prs-dryrun.ps1" -Encoding UTF8
            
            # Run dry run version
            & ".\merge-dependency-prs-dryrun.ps1" -MergeMethod $MergeMethod -CloseUnmergeable:$CloseUnmergeable
          } else {
            # Run actual script
            & ".\merge-dependency-prs.ps1" -MergeMethod $MergeMethod -CloseUnmergeable:$CloseUnmergeable
          }
          
      - name: Upload run summary
        if: always()
        shell: pwsh
        run: |
          $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss UTC"
          $runUrl = "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          
          Write-Host "`n=== Action Summary ===" -ForegroundColor Magenta
          Write-Host "Workflow: Merge Dependency PRs" -ForegroundColor White
          Write-Host "Triggered by: ${{ github.actor }}" -ForegroundColor White
          Write-Host "Run time: $timestamp" -ForegroundColor White
          Write-Host "Run URL: $runUrl" -ForegroundColor White
          Write-Host "Merge method: ${{ github.event.inputs.merge_method }}" -ForegroundColor White
          Write-Host "Close unmergeable: ${{ github.event.inputs.close_unmergeable }}" -ForegroundColor White
          Write-Host "Dry run: ${{ github.event.inputs.dry_run }}" -ForegroundColor White
          
          # Create job summary for GitHub Actions UI
          @"
          ## üîÑ Merge Dependency PRs Action Summary
          
          **Triggered by:** ${{ github.actor }}  
          **Run time:** $timestamp  
          **Merge method:** ${{ github.event.inputs.merge_method }}  
          **Close unmergeable PRs:** ${{ github.event.inputs.close_unmergeable }}  
          **Dry run mode:** ${{ github.event.inputs.dry_run }}  
          
          **Run details:** [View full log]($runUrl)
          
          ---
          *This action processes dependency update PRs (renovate/dependabot) across multiple repositories.*
          "@ | Out-File $env:GITHUB_STEP_SUMMARY -Encoding UTF8
